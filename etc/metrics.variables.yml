grafana_datasources:
    apiVersion: 1
    datasources:
        - name: "{{ influxdb_org }} - {{ item.name }}"
          type: grafana-influxdb-flux-datasource
          typeLogoUrl: public/plugins/grafana-influxdb-flux-datasource/img/influxdb_logo.svg
          access: proxy
          url: http://{{ influxdb_ipaddr }}:{{ influxdb_conf.bind.port }}
          password: ""
          user: ""
          database: ""
          basicAuth: false
          isDefault: false
          jsonData:
              bucket: "{{ item.name }}"
              organization: "{{ influxdb_org }}"
              url: "http://{{ influxdb_ipaddr }}:{{ influxdb_conf.bind.port }}"
          secureJsonData:
              token: "{{ grafana_influxdb_token }}"

grafana_plugins:
    - name: flux
      url: "{{ lookup('env' , 'REPO_PATH') }}/files/grafana-influxdb-flux-datasource-v5.4.1-0-gfd7f150.zip"

traefik_conf:
    entryPoints:
        web:
            address: ":8080"

        websecure:
            address: ":8443"
    http:
        routers:
            grafana:
                service: grafana
                rule: "PathPrefix(`/grafana`)"
                entryPoints:
                    - web
            influxdb:
                service: influxdb
                rule: "PathPrefix(`/`)"
                entryPoints:
                    - web
        services:
            grafana:
                loadBalancer:
                    servers:
                        - url: http://{{ grafana_ipaddr }}:3000/grafana
            influxdb:
                loadBalancer:
                    servers:
                        - url: http://{{ influxdb_ipaddr }}:{{ influxdb_conf.bind.port }}/

influxdb_conf:
    bind:
        port: 8086

influxdb_api:
    token: "{{ influxdb_admin_token }}"
    tokens_output_file: /root/.influxdb_tokens.csv
    endpoint: "http://{{ influxdb_ipaddr }}:{{ influxdb_conf.bind.port }}"

influxdb_buckets:
    - name: haproxy
      org: "{{ influxdb_org }}"
      retention_hours: "{{ influxdb_retention }}"
      create_write_token: true
    - name: traefik
      org: "{{ influxdb_org }}"
      retention_hours: "{{ influxdb_retention }}"
      create_write_token: true
    - name: postgresql
      org: "{{ influxdb_org }}"
      retention_hours: "{{ influxdb_retention }}"
      create_write_token: true
    - name: apache-php
      org: "{{ influxdb_org }}"
      retention_hours: "{{ influxdb_retention }}"
      create_write_token: true
    - name: nginx
      org: "{{ influxdb_org }}"
      retention_hours: "{{ influxdb_retention }}"
      create_write_token: true
    - name: mongodb
      org: "{{ influxdb_org }}"
      retention_hours: "{{ influxdb_retention }}"
      create_write_token: true
    - name: appliance-metrics
      org: "{{ influxdb_org }}"
      retention_hours: "{{ influxdb_retention }}"
      create_write_token: true

telegraf_use_docker: false
telegraf_influxdbv2_listener_config:
    urls: [ "{{ influxdb_api.endpoint }}" ]
    token: "{{ influx_token }}"
    bucket: "appliance-metrics"
    bucket_tag: ""
    exclude_bucket_tag: false
    insecure_skip_verify: false
telegraf_main_config:
    global_tags:
    add_node_type: false
    agent:
        interval: "{{ telegraf_metrics_agent_interval_seconds }}"
        round_interval: false
        metric_batch_size: 1024
        metric_buffer_limit: 10240
        collection_jitter: 8s
        flush_jitter: 8s
        precision: ""
        debug: false
        quiet: false
        logfile: ""
        omit_hostname: false

bootstrap_http_proxy: "{{ lookup('env', 'HTTP_PROXY') }}"
bootstrap_no_proxy: "{{ lookup('env', 'NO_PROXY') }}"

podman_http_proxy: "{{ lookup('env', 'HTTP_PROXY') }}"
podman_no_proxy: "{{ lookup('env', 'NO_PROXY') }}"

consul_retry_join: "{{ lookup('env', 'CONSUL_SERVERS') | split(',') }}"
consul_dns_domain: "{{ lookup('env', 'CONSUL_DNS_DOMAIN') }}"
consul_datacenter: "{{ lookup('env', 'CONSUL_DATACENTER') }}"
consul_http_proxy: "{{ lookup('env', 'HTTP_PROXY') }}"

influxdb_consul_service:
    - service:
      name: "influxdb"
      tags:
          - "metrics"
          - "appliance"
      port: 80
      enable_tag_override: false
      checks:
          - http: "http://0.0.0.0:80"
            interval: "60s"

grafana_consul_service:
    - service:
      name: "grafana"
      tags:
          - "metrics"
          - "appliance"
      port: 80
      enable_tag_override: false
      checks:
          - http: "http://0.0.0.0:80/grafana/login"
            interval: "60s"
